{
  "version": 3,
  "sources": ["../src/content.ts"],
  "sourcesContent": ["/**\n * SoundTube - YouTube IPA Subtitles\n * A simple, lovable, complete extension for learning English pronunciation\n */\n\n// Common English words with their IPA pronunciation\nconst commonWords: Record<string, string> = {\n  the: \"\u00F0\u0259\",\n  be: \"bi\u02D0\",\n  to: \"tu\u02D0\",\n  of: \"\u0259v\",\n  and: \"\u00E6nd\",\n  a: \"e\u026A\",\n  in: \"\u026An\",\n  that: \"\u00F0\u00E6t\",\n  have: \"h\u00E6v\",\n  i: \"a\u026A\",\n  it: \"\u026At\",\n  for: \"f\u0254\u02D0r\",\n  not: \"n\u0252t\",\n  on: \"\u0252n\",\n  with: \"w\u026A\u00F0\",\n  he: \"hi\u02D0\",\n  as: \"\u00E6z\",\n  you: \"ju\u02D0\",\n  do: \"du\u02D0\",\n  at: \"\u00E6t\",\n  this: \"\u00F0\u026As\",\n  but: \"b\u028Ct\",\n  his: \"h\u026Az\",\n  by: \"ba\u026A\",\n  from: \"fr\u0252m\",\n  they: \"\u00F0e\u026A\",\n  we: \"wi\u02D0\",\n  say: \"se\u026A\",\n  her: \"h\u025C\u02D0r\",\n  she: \"\u0283i\u02D0\",\n  about: \"\u0259\u02C8ba\u028At\",\n  there: \"\u00F0\u025B\u0259r\",\n  use: \"ju\u02D0z\",\n  what: \"w\u0252t\",\n  which: \"w\u026At\u0283\",\n  their: \"\u00F0\u025B\u0259r\",\n  if: \"\u026Af\",\n  will: \"w\u026Al\",\n  way: \"we\u026A\",\n  many: \"\u02C8m\u025Bni\",\n  then: \"\u00F0\u025Bn\",\n  them: \"\u00F0\u025Bm\",\n  would: \"w\u028Ad\",\n  write: \"ra\u026At\",\n  like: \"la\u026Ak\",\n  so: \"so\u028A\",\n  these: \"\u00F0i\u02D0z\",\n  long: \"l\u0254\u02D0\u014B\",\n  make: \"me\u026Ak\",\n  thing: \"\u03B8\u026A\u014B\",\n  see: \"si\u02D0\",\n  him: \"h\u026Am\",\n  two: \"tu\u02D0\",\n  has: \"h\u00E6z\",\n  look: \"l\u028Ak\",\n  more: \"m\u0254\u02D0r\",\n  day: \"de\u026A\",\n  could: \"k\u028Ad\",\n  go: \"go\u028A\",\n  come: \"k\u028Cm\",\n  did: \"d\u026Ad\",\n  sound: \"sa\u028And\",\n  number: \"\u02C8n\u028Cmb\u0259r\",\n  who: \"hu\u02D0\",\n  over: \"\u02C8o\u028Av\u0259r\",\n  know: \"no\u028A\",\n  water: \"\u02C8w\u0254\u02D0t\u0259r\",\n  than: \"\u00F0\u00E6n\",\n  call: \"k\u0254\u02D0l\",\n  first: \"f\u025C\u02D0rst\",\n  people: \"\u02C8pi\u02D0p\u0259l\",\n  may: \"me\u026A\",\n  down: \"da\u028An\",\n  side: \"sa\u026Ad\",\n  been: \"b\u026An\",\n  now: \"na\u028A\",\n  find: \"fa\u026And\",\n  head: \"h\u025Bd\",\n  stand: \"st\u00E6nd\",\n  own: \"o\u028An\",\n  page: \"pe\u026Ad\u0292\",\n  should: \"\u0283\u028Ad\",\n  found: \"fa\u028And\",\n  answer: \"\u02C8\u00E6ns\u0259r\",\n  school: \"sku\u02D0l\",\n  grow: \"gro\u028A\",\n  study: \"\u02C8st\u028Cdi\",\n  learn: \"l\u025C\u02D0rn\",\n  plant: \"pl\u00E6nt\",\n  cover: \"\u02C8k\u028Cv\u0259r\",\n  food: \"fu\u02D0d\",\n  sun: \"s\u028Cn\",\n  four: \"f\u0254\u02D0r\",\n  thought: \"\u03B8\u0254\u02D0t\",\n  let: \"l\u025Bt\",\n  keep: \"ki\u02D0p\",\n  eye: \"a\u026A\",\n  never: \"\u02C8n\u025Bv\u0259r\",\n  last: \"l\u00E6st\",\n  door: \"d\u0254\u02D0r\",\n  between: \"b\u026A\u02C8twi\u02D0n\",\n  city: \"\u02C8s\u026Ati\",\n  tree: \"tri\u02D0\",\n  cross: \"kr\u0254\u02D0s\",\n  since: \"s\u026Ans\",\n  hard: \"h\u0251\u02D0rd\",\n  start: \"st\u0251\u02D0rt\",\n  might: \"ma\u026At\",\n  story: \"\u02C8st\u0254\u02D0ri\",\n  saw: \"s\u0254\u02D0\",\n  far: \"f\u0251\u02D0r\",\n  sea: \"si\u02D0\",\n  draw: \"dr\u0254\u02D0\",\n  left: \"l\u025Bft\",\n  late: \"le\u026At\",\n  run: \"r\u028Cn\",\n  while: \"wa\u026Al\",\n  press: \"pr\u025Bs\",\n  close: \"klo\u028Az\",\n  night: \"na\u026At\",\n  real: \"ri\u02D0l\",\n  life: \"la\u026Af\",\n  few: \"fju\u02D0\",\n  stop: \"st\u0252p\",\n};\n\n// Simple vowel and consonant sounds\nconst simplePhonemes: Record<string, string> = {\n  a: \"\u00E6\",\n  e: \"\u025B\",\n  i: \"\u026A\",\n  o: \"\u0252\",\n  u: \"\u028C\",\n  th: \"\u03B8\",\n  sh: \"\u0283\",\n  ch: \"t\u0283\",\n  ph: \"f\",\n};\n\n// Enhanced phoneme patterns for better word-to-IPA conversion\nconst phonemePatterns: Record<string, string> = {\n  // Vowels\n  a: \"\u00E6\",\n  e: \"\u025B\",\n  i: \"\u026A\",\n  o: \"\u0252\",\n  u: \"\u028C\",\n\n  // Common vowel combinations\n  ee: \"i\u02D0\",\n  ea: \"i\u02D0\",\n  oo: \"u\u02D0\",\n  ou: \"a\u028A\",\n  ow: \"a\u028A\",\n  ai: \"e\u026A\",\n  ay: \"e\u026A\",\n  ie: \"a\u026A\",\n  igh: \"a\u026A\",\n  oa: \"o\u028A\",\n  oe: \"o\u028A\",\n  oi: \"\u0254\u026A\",\n  oy: \"\u0254\u026A\",\n\n  // Consonants\n  th: \"\u03B8\",\n  sh: \"\u0283\",\n  ch: \"t\u0283\",\n  ph: \"f\",\n  wh: \"w\",\n  ng: \"\u014B\",\n  gh: \"\", // Often silent\n\n  // Common word endings\n  ing: \"\u026A\u014B\",\n  ed: \"d\",\n  es: \"z\",\n  er: \"\u0259r\",\n  or: \"\u0259r\",\n  ar: \"\u0259r\",\n  tion: \"\u0283\u0259n\",\n  sion: \"\u0292\u0259n\",\n};\n\nclass SoundTube {\n  private enabled = false;\n  private toggleButton: HTMLElement | null = null;\n  private subtitleContainer: HTMLElement | null = null;\n  private captionWindow: HTMLElement | null = null;\n  private currentVideoId: string | null = null;\n  private transcriptData: any[] = [];\n  private currentSubtitleIndex = -1;\n  private checkVideoInterval: number | null = null;\n  private buttonAddAttempts = 0;\n  private maxButtonAddAttempts = 10;\n  private subtitleCheckInterval: number | null = null;\n\n  constructor() {\n    console.log(\"SoundTube: Starting...\");\n    this.createStyles();\n    this.setupVideoChangeDetection();\n    this.tryAddingButtonToPlayer();\n  }\n\n  private createStyles() {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      .ytp-button.soundtube-button {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        opacity: 0.9;\n        transition: opacity 0.1s ease-in-out;\n        margin: 0;\n        padding: 0;\n        height: 100%;\n        cursor: pointer;\n        font-family: 'YouTube Noto', Roboto, Arial, sans-serif;\n        font-size: 16px;\n        font-weight: bold;\n        color: white;\n      }\n      \n      .ytp-button.soundtube-button:hover {\n        opacity: 1;\n      }\n      \n      .ytp-button.soundtube-button.active {\n        color: #ff0000;\n      }\n      \n      .soundtube-caption-container {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        pointer-events: none;\n        z-index: 41;\n      }\n      \n      .soundtube-caption-window {\n        position: absolute;\n        text-align: center;\n        left: 50%;\n        width: auto;\n        min-width: 240px;\n        max-width: 80%;\n        transform: translateX(-50%);\n        bottom: 2%;\n        margin-bottom: 61px;\n        transition: margin-bottom .25s cubic-bezier(0,0,.2,1);\n        z-index: 41;\n      }\n      \n      .soundtube-caption-text {\n        overflow-wrap: normal;\n        display: block;\n      }\n      \n      .soundtube-caption-line {\n        display: block;\n      }\n      \n      .soundtube-caption-segment {\n        display: inline-block;\n        white-space: pre-wrap;\n        background: rgba(8, 8, 8, 0.75);\n        font-size: 25px;\n        color: #ffeb3b;\n        font-family: 'YouTube Noto', Roboto, Arial, sans-serif;\n        padding: 4px 8px;\n        border-radius: 2px;\n      }\n      \n      .soundtube-caption-segment.loading {\n        background: rgba(8, 8, 8, 0.5);\n        color: #ffffff;\n        font-style: italic;\n      }\n      \n      .soundtube-caption-segment.error {\n        background: rgba(255, 0, 0, 0.5);\n        color: #ffffff;\n      }\n      \n      @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n      }\n      \n      .soundtube-caption-segment {\n        animation: fadeIn 0.2s ease-in-out;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  private createSubtitleContainer() {\n    // Remove any existing container\n    const existingContainer = document.querySelector(\n      \".soundtube-caption-container\"\n    );\n    if (existingContainer) {\n      existingContainer.remove();\n    }\n\n    // Find the YouTube player container\n    const playerContainer = document.querySelector(\".html5-video-player\");\n    if (!playerContainer) {\n      console.log(\"SoundTube: Could not find video player container\");\n      return;\n    }\n\n    // Create container structure matching YouTube's caption structure\n    this.subtitleContainer = document.createElement(\"div\");\n    this.subtitleContainer.className = \"soundtube-caption-container\";\n    this.subtitleContainer.style.display = \"none\";\n\n    this.captionWindow = document.createElement(\"div\");\n    this.captionWindow.className = \"soundtube-caption-window\";\n\n    const captionText = document.createElement(\"span\");\n    captionText.className = \"soundtube-caption-text\";\n\n    this.captionWindow.appendChild(captionText);\n    this.subtitleContainer.appendChild(this.captionWindow);\n    playerContainer.appendChild(this.subtitleContainer);\n\n    console.log(\"SoundTube: Created subtitle container\");\n  }\n\n  private tryAddingButtonToPlayer() {\n    // Try to find the YouTube player right controls\n    const rightControls = document.querySelector(\".ytp-right-controls\");\n\n    if (rightControls) {\n      this.addButtonToPlayer(rightControls);\n    } else {\n      // If not found, retry a few times\n      this.buttonAddAttempts++;\n      if (this.buttonAddAttempts < this.maxButtonAddAttempts) {\n        setTimeout(() => this.tryAddingButtonToPlayer(), 1000);\n      }\n    }\n  }\n\n  private addButtonToPlayer(rightControls: Element) {\n    // Don't add if button already exists\n    if (document.querySelector(\".soundtube-button\")) {\n      return;\n    }\n\n    // Find the first button in the controls to insert before it\n    const firstButton = rightControls.querySelector(\".ytp-button\");\n\n    // Create our button\n    this.toggleButton = document.createElement(\"button\");\n    this.toggleButton.className = \"ytp-button soundtube-button\";\n    this.toggleButton.setAttribute(\"aria-label\", \"Toggle IPA Subtitles\");\n    this.toggleButton.textContent = \"/\u00E6/\";\n\n    // Add click handler\n    this.toggleButton.onclick = () => this.toggleEnabled();\n\n    // Insert button at the beginning of the controls\n    if (firstButton) {\n      rightControls.insertBefore(this.toggleButton, firstButton);\n    } else {\n      rightControls.appendChild(this.toggleButton);\n    }\n\n    console.log(\"SoundTube: Button added to player\");\n  }\n\n  private toggleEnabled() {\n    this.enabled = !this.enabled;\n\n    if (this.toggleButton) {\n      this.toggleButton.classList.toggle(\"active\", this.enabled);\n    }\n\n    // Create subtitle container if it doesn't exist or was removed\n    if (!this.subtitleContainer || !document.contains(this.subtitleContainer)) {\n      this.createSubtitleContainer();\n    }\n\n    if (this.subtitleContainer) {\n      this.subtitleContainer.style.display = this.enabled ? \"block\" : \"none\";\n    }\n\n    if (this.enabled) {\n      this.loadSubtitles();\n    } else {\n      this.stopSubtitleTracking();\n    }\n  }\n\n  private setupVideoChangeDetection() {\n    // Check for video changes\n    this.checkVideoInterval = window.setInterval(() => {\n      const videoId = this.getVideoId();\n      if (videoId && videoId !== this.currentVideoId) {\n        console.log(\"SoundTube: New video detected:\", videoId);\n        this.currentVideoId = videoId;\n\n        // Try to add button again in case player was reloaded\n        this.buttonAddAttempts = 0;\n        this.tryAddingButtonToPlayer();\n\n        // Recreate subtitle container\n        this.createSubtitleContainer();\n\n        if (this.enabled) {\n          this.loadSubtitles();\n        }\n      }\n    }, 2000);\n\n    // Also listen for navigation events\n    window.addEventListener(\"yt-navigate-finish\", () => {\n      console.log(\"SoundTube: Navigation detected\");\n      setTimeout(() => {\n        const videoId = this.getVideoId();\n        if (videoId && videoId !== this.currentVideoId) {\n          this.currentVideoId = videoId;\n\n          // Try to add button again in case player was reloaded\n          this.buttonAddAttempts = 0;\n          this.tryAddingButtonToPlayer();\n\n          // Recreate subtitle container\n          this.createSubtitleContainer();\n\n          if (this.enabled) {\n            this.loadSubtitles();\n          }\n        }\n      }, 1000);\n    });\n  }\n\n  private getVideoId(): string | null {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(\"v\");\n  }\n\n  private async loadSubtitles() {\n    try {\n      // Show loading state\n      this.showLoadingState();\n\n      // Get video ID and check if subtitles are available\n      const videoId = this.getVideoId();\n      if (!videoId) {\n        throw new Error(\"No video ID found\");\n      }\n\n      // Try to get auto-generated subtitles first\n      let subtitles = await this.getAutoSubtitles();\n\n      // If no auto-generated subtitles, try manual subtitles\n      if (!subtitles || subtitles.length === 0) {\n        subtitles = await this.getManualSubtitles();\n      }\n\n      // If still no subtitles, show error\n      if (!subtitles || subtitles.length === 0) {\n        throw new Error(\"No subtitles available for this video\");\n      }\n\n      this.transcriptData = subtitles;\n      this.currentSubtitleIndex = -1;\n      this.startSubtitleTracking();\n\n      // Hide loading state\n      this.hideLoadingState();\n    } catch (error) {\n      console.error(\"SoundTube: Error loading subtitles:\", error);\n      this.showError(\n        error instanceof Error ? error.message : \"Failed to load subtitles\"\n      );\n      this.enabled = false;\n      if (this.toggleButton) {\n        this.toggleButton.classList.remove(\"active\");\n      }\n    }\n  }\n\n  private showLoadingState() {\n    if (this.captionWindow) {\n      const loadingSpan = document.createElement(\"span\");\n      loadingSpan.className = \"soundtube-caption-segment loading\";\n      loadingSpan.textContent = \"Loading IPA subtitles...\";\n      this.captionWindow\n        .querySelector(\".soundtube-caption-text\")\n        ?.appendChild(loadingSpan);\n    }\n  }\n\n  private hideLoadingState() {\n    if (this.captionWindow) {\n      const loadingSpan = this.captionWindow.querySelector(\n        \".soundtube-caption-segment.loading\"\n      );\n      if (loadingSpan) {\n        loadingSpan.remove();\n      }\n    }\n  }\n\n  private showError(message: string) {\n    if (this.captionWindow) {\n      const errorSpan = document.createElement(\"span\");\n      errorSpan.className = \"soundtube-caption-segment error\";\n      errorSpan.textContent = message;\n      this.captionWindow\n        .querySelector(\".soundtube-caption-text\")\n        ?.appendChild(errorSpan);\n\n      // Remove error message after 3 seconds\n      setTimeout(() => {\n        if (errorSpan.parentNode) {\n          errorSpan.remove();\n        }\n      }, 3000);\n    }\n  }\n\n  private processSubtitle(text: string): string {\n    // Remove HTML tags and decode HTML entities\n    const cleanText = text\n      .replace(/<[^>]*>/g, \"\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n\n    // Split into words and convert each to IPA\n    return cleanText\n      .split(/\\s+/)\n      .map((word) => {\n        // Remove punctuation but keep track of it\n        const punctuation = word.match(/[^\\w\\s]$/)?.[0] || \"\";\n        const cleanWord = word.replace(/[^\\w\\s]/g, \"\");\n\n        // Skip empty words\n        if (!cleanWord) return word;\n\n        // Convert to IPA and add back punctuation\n        return this.convertToIPA(cleanWord) + punctuation;\n      })\n      .join(\" \");\n  }\n\n  private startSubtitleTracking() {\n    if (this.transcriptData.length === 0) return;\n\n    // Check current time every 500ms\n    const checkInterval = setInterval(() => {\n      if (!this.enabled) {\n        clearInterval(checkInterval);\n        return;\n      }\n\n      const video = document.querySelector(\"video\");\n      if (!video) return;\n\n      const currentTime = video.currentTime;\n      this.updateSubtitle(currentTime);\n    }, 500);\n  }\n\n  private stopSubtitleTracking() {\n    // Clear subtitle\n    if (this.subtitleContainer && this.captionWindow) {\n      const captionText = this.captionWindow.querySelector(\n        \".soundtube-caption-text\"\n      );\n      if (captionText) {\n        captionText.innerHTML = \"\";\n      }\n    }\n\n    // Clear any subtitle check interval\n    if (this.subtitleCheckInterval) {\n      clearInterval(this.subtitleCheckInterval);\n      this.subtitleCheckInterval = null;\n    }\n\n    // Turn off YouTube's CC if it was enabled by us\n    const ccButton = document.querySelector(\n      \".ytp-subtitles-button\"\n    ) as HTMLElement;\n    if (ccButton && ccButton.getAttribute(\"aria-pressed\") === \"true\") {\n      ccButton.click();\n    }\n  }\n\n  private updateSubtitle(currentTime: number) {\n    if (this.transcriptData.length === 0) return;\n\n    // Find the current subtitle\n    let index = this.transcriptData.findIndex((item, i) => {\n      const nextItem = this.transcriptData[i + 1];\n      return (\n        currentTime >= item.time && (!nextItem || currentTime < nextItem.time)\n      );\n    });\n\n    // If index changed, update subtitle\n    if (index !== -1 && index !== this.currentSubtitleIndex) {\n      this.currentSubtitleIndex = index;\n      const text = this.transcriptData[index].text;\n      this.showSubtitle(text);\n    }\n  }\n\n  private showSubtitle(text: string) {\n    if (!this.subtitleContainer || !document.contains(this.subtitleContainer)) {\n      this.createSubtitleContainer();\n    }\n\n    if (!this.subtitleContainer || !this.captionWindow) return;\n\n    const ipaText = this.textToIPA(text);\n\n    const captionText = this.captionWindow.querySelector(\n      \".soundtube-caption-text\"\n    );\n    if (captionText) {\n      captionText.innerHTML = `\n        <span class=\"soundtube-caption-line\">\n          <span class=\"soundtube-caption-segment\">${ipaText}</span>\n        </span>\n      `;\n    }\n  }\n\n  private showMessage(message: string) {\n    if (!this.subtitleContainer || !document.contains(this.subtitleContainer)) {\n      this.createSubtitleContainer();\n    }\n\n    if (!this.subtitleContainer || !this.captionWindow) return;\n\n    const captionText = this.captionWindow.querySelector(\n      \".soundtube-caption-text\"\n    );\n    if (captionText) {\n      captionText.innerHTML = `\n        <span class=\"soundtube-caption-line\">\n          <span class=\"soundtube-caption-segment\">${message}</span>\n        </span>\n      `;\n    }\n\n    // Clear message after 3 seconds\n    setTimeout(() => {\n      if (this.subtitleContainer && this.captionWindow) {\n        const captionText = this.captionWindow.querySelector(\n          \".soundtube-caption-text\"\n        );\n        if (captionText && captionText.textContent?.includes(message)) {\n          captionText.innerHTML = \"\";\n        }\n      }\n    }, 3000);\n  }\n\n  private textToIPA(text: string): string {\n    // First check if it's in our common words dictionary\n    const lowerWord = text.toLowerCase();\n    if (commonWords[lowerWord]) {\n      return commonWords[lowerWord];\n    }\n\n    // If not found, try to convert using phoneme patterns\n    let ipa = lowerWord;\n\n    // Sort patterns by length (longest first) to handle overlapping patterns\n    const patterns = Object.keys(phonemePatterns).sort(\n      (a, b) => b.length - a.length\n    );\n\n    for (const pattern of patterns) {\n      const regex = new RegExp(pattern, \"g\");\n      ipa = ipa.replace(regex, phonemePatterns[pattern]);\n    }\n\n    // Handle special cases\n    ipa = this.handleSpecialCases(ipa);\n\n    return ipa;\n  }\n\n  private handleSpecialCases(ipa: string): string {\n    // Handle silent e at the end of words\n    ipa = ipa.replace(/e$/, \"\");\n\n    // Handle doubled consonants\n    ipa = ipa.replace(/([bcdfghjklmnpqrstvwxz])\\1/g, \"$1\");\n\n    // Add stress mark to words longer than one syllable\n    const vowelMatches = ipa.match(/[\u00E6\u025B\u026A\u0252\u028Ci\u02D0u\u02D0a\u028Ae\u026Aa\u026Ao\u028A\u0254\u026A]/g);\n    if (vowelMatches && vowelMatches.length > 1) {\n      ipa = \"\u02C8\" + ipa;\n    }\n\n    return ipa;\n  }\n\n  private async getAutoSubtitles(): Promise<\n    Array<{ time: number; text: string }>\n  > {\n    // Try to find and click the auto-generated subtitles option\n    const ccButton = document.querySelector(\n      \".ytp-subtitles-button\"\n    ) as HTMLElement;\n    if (!ccButton) {\n      return [];\n    }\n\n    // Enable subtitles if not already enabled\n    if (ccButton.getAttribute(\"aria-pressed\") !== \"true\") {\n      ccButton.click();\n    }\n\n    // Wait for subtitles to appear\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    // Get all subtitle segments\n    const segments = document.querySelectorAll(\".ytp-caption-segment\");\n    if (!segments.length) {\n      return [];\n    }\n\n    return Array.from(segments).map((segment) => ({\n      time: this.getCurrentVideoTime(),\n      text: segment.textContent || \"\",\n    }));\n  }\n\n  private async getManualSubtitles(): Promise<\n    Array<{ time: number; text: string }>\n  > {\n    // Try to find the transcript button\n    const transcriptButton = document.querySelector(\n      'button[aria-label=\"Open transcript\"]'\n    ) as HTMLElement;\n    if (!transcriptButton) {\n      return [];\n    }\n\n    // Click the transcript button\n    transcriptButton.click();\n\n    // Wait for transcript to load\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    // Get all transcript segments\n    const segments = document.querySelectorAll(\n      \"ytd-transcript-segment-renderer\"\n    );\n    if (!segments.length) {\n      return [];\n    }\n\n    const subtitles = Array.from(segments).map((segment) => {\n      const timeElement = segment.querySelector(\".segment-timestamp\");\n      const textElement = segment.querySelector(\".segment-text\");\n\n      const timeText = timeElement?.textContent || \"0:00\";\n      const text = textElement?.textContent || \"\";\n\n      // Convert time to seconds\n      const timeParts = timeText.split(\":\").map(Number);\n      let seconds = 0;\n      if (timeParts.length === 3) {\n        seconds = timeParts[0] * 3600 + timeParts[1] * 60 + timeParts[2];\n      } else if (timeParts.length === 2) {\n        seconds = timeParts[0] * 60 + timeParts[1];\n      }\n\n      return { time: seconds, text };\n    });\n\n    // Close the transcript panel\n    const closeButton = document.querySelector(\n      'button[aria-label=\"Close transcript\"]'\n    ) as HTMLElement;\n    if (closeButton) {\n      closeButton.click();\n    }\n\n    return subtitles;\n  }\n\n  private getCurrentVideoTime(): number {\n    const video = document.querySelector(\"video\");\n    return video ? Math.floor(video.currentTime) : 0;\n  }\n\n  private convertToIPA(word: string): string {\n    // First check if it's in our common words dictionary\n    const lowerWord = word.toLowerCase();\n    if (commonWords[lowerWord]) {\n      return commonWords[lowerWord];\n    }\n\n    // If not found, try to convert using phoneme patterns\n    let ipa = lowerWord;\n\n    // Sort patterns by length (longest first) to handle overlapping patterns\n    const patterns = Object.keys(phonemePatterns).sort(\n      (a, b) => b.length - a.length\n    );\n\n    for (const pattern of patterns) {\n      const regex = new RegExp(pattern, \"g\");\n      ipa = ipa.replace(regex, phonemePatterns[pattern]);\n    }\n\n    // Handle special cases\n    ipa = this.handleSpecialCases(ipa);\n\n    return ipa;\n  }\n}\n\n// Initialize with a delay to ensure page is loaded\nsetTimeout(() => {\n  new SoundTube();\n}, 1000);\n"],
  "mappings": "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",
  "names": ["captionText"]
}
